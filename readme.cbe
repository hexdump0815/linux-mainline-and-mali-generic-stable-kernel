# directories:
# - /compile/doc/stable - the files in this dir
# - /compile/source/linux-stable-cbe - the kernel sources checked out from gitrepo
# - /compile/result/stable - the resulting kernel, modules etc. tar.gz files
# - /compile/doc/kernel-config-options - https://github.com/hexdump0815/kernel-config-options
# - /compile/doc/kernel-extra-patches - https://github.com/hexdump0815/kernel-extra-patches
# name: stb-cbe - chromebook exynos

# it looks like for newer kernel versions like v6.5 the following packages have to be
# installed in order to get the tool compiled well: libelf-dev python3-dev libtraceevent-dev

cd /compile/source/linux-stable-cbe

# patches:
# bring in patches from v6.11-rc7 of pmos exynos5 mainline tree
patch -p1 < /compile/doc/stable/misc.cbp/patches/pmos-exynos-v6.12-rc6.patch
# remove panfrost purge log spam
patch -p1 < /compile/doc/kernel-extra-patches/remove-panfrost-purge-log-spam/v6.12.12.patch
# fix kernel version number: + instead of -dirty at the end
patch -p1 < /compile/doc/kernel-extra-patches/fix-kernel-version/v6.12.5.patch

export ARCH=arm
scripts/kconfig/merge_config.sh -m /compile/doc/stable/misc.cbe/misc/config.cbe-base /compile/doc/kernel-config-options/docker-options.cfg /compile/doc/kernel-config-options/options-to-remove-generic.cfg /compile/doc/stable/misc.cbe/options/options-to-remove-special.cfg /compile/doc/kernel-config-options/additional-options-generic.cfg /compile/doc/kernel-config-options/additional-options-armv7l.cfg /compile/doc/stable/misc.cbe/options/additional-options-special.cfg
( cd /compile/doc/kernel-config-options ; git rev-parse --verify HEAD ) > /compile/doc/stable/misc.cbe/options/kernel-config-options.version
make olddefconfig
make -j 4 zImage dtbs modules
cd tools/perf
# without this it would fail on warnings
export WERROR=0
# this is to avoid compile errors
export NO_JEVENTS=1
make
cd ../power/cpupower
make
cd ../../..
export kver=`make kernelrelease`
echo ${kver}
# remove debug info if there and not wanted
# find . -type f -name '*.ko' | sudo xargs -n 1 objcopy --strip-unneeded
make modules_install
mkdir -p /lib/modules/${kver}/tools
cp -v tools/perf/perf /lib/modules/${kver}/tools
cp -v tools/power/cpupower/cpupower /lib/modules/${kver}/tools
cp -v tools/power/cpupower/libcpupower.so.? /lib/modules/${kver}/tools
# make headers_install INSTALL_HDR_PATH=/usr
cp -v .config /boot/config-${kver}
cp -v arch/arm/boot/zImage /boot/zImage-${kver}
mkdir -p /boot/dtb-${kver}
cp -v arch/arm/boot/dts/samsung/exynos5250-snow.dtb /boot/dtb-${kver}
cp -v arch/arm/boot/dts/samsung/exynos5250-snow-rev5.dtb /boot/dtb-${kver}
cp -v arch/arm/boot/dts/samsung/exynos5250-spring.dtb /boot/dtb-${kver}
cp -v System.map /boot/System.map-${kver}
# start chromebook special - required: apt-get install liblz4-tool vboot-kernel-utils
cp arch/arm/boot/zImage zImage
dd if=/dev/zero of=bootloader.bin bs=512 count=1
cp /compile/doc/stable/misc.cbe/misc/cmdline cmdline
cp /compile/doc/stable/misc.cbe/misc/kernel.its kernel.its
# this one for some reason did not result in a bootable image
#mkimage -D "-I dts -O dtb -p 2048" -f auto -A arm -O linux -T kernel -C none -a 0 -d zImage -b arch/arm/boot/dts/samsung/exynos5250-snow.dtb -b arch/arm/boot/dts/samsung/exynos5250-snow-rev5.dtb -b arch/arm/boot/dts/samsung/exynos5250-spring.dtb kernel.itb
mkimage -D "-I dts -O dtb -p 2048" -f kernel.its kernel.itb
vbutil_kernel --pack vmlinux.kpart --keyblock /usr/share/vboot/devkeys/kernel.keyblock --signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk --version 1 --config cmdline --bootloader bootloader.bin --vmlinuz kernel.itb --arch arm
cp -v vmlinux.kpart /boot/vmlinux.kpart-${kver}
rm -f zImage cmdline bootloader.bin kernel.its kernel.itb vmlinux.kpart
# end chromebook special
cd /boot
update-initramfs -c -k ${kver}
#mkimage -A arm -O linux -T ramdisk -a 0x0 -e 0x0 -n initrd.img-${kver} -d initrd.img-${kver} uInitrd-${kver}
tar cvzf /compile/source/linux-stable-cbe/${kver}.tar.gz /boot/*-${kver} /lib/modules/${kver}
cp -v /compile/doc/stable/config.cbe /compile/doc/stable/config.cbe.old
cp -v /compile/source/linux-stable-cbe/.config /compile/doc/stable/config.cbe
cp -v /compile/source/linux-stable-cbe/.config /compile/doc/stable/config.cbe-${kver}
cp -v /compile/source/linux-stable-cbe/*.tar.gz /compile/result/stable
